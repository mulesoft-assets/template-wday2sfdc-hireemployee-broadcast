<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:workday="http://www.mulesoft.org/schema/mule/workday" xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
    xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/workday http://www.mulesoft.org/schema/mule/workday/current/mule-workday.xsd">

    <flow name="schedulerFlow" doc:id="aff4106d-d2f6-4366-940a-a380dcb1cf73">
        <scheduler doc:name="Scheduler" doc:id="58b7c776-fbee-4753-9bea-f6cc3e037efd">
            <scheduling-strategy>
                <fixed-frequency frequency="${scheduler.frequency}" startDelay="${scheduler.start.delay}" />
            </scheduling-strategy>
        </scheduler>
        <flow-ref doc:name="queryFlow" doc:id="ada07859-8839-4751-9623-68a08d31a472" name="queryFlow" />
        <logger level="INFO" doc:name="Log Employees to sync" doc:id="65934ef1-2939-4fab-bde9-1886331527ea" message="#['Employees to sync: ' ++ write(payload)]" />
        <flow-ref name="businessLogicFlow" doc:name="businessLogicFlow" doc:id="e16bf02c-b833-47de-afd5-2329ce1fab2b" />
        <error-handler>
            <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="488b507d-e26c-4c56-8759-8bb4f6645d71"
                type="ANY">
                <flow-ref doc:name="errorHandlingFlow" doc:id="afdaf73c-0137-4d60-84f6-5c41234771a3" name="errorHandlingFlow" />
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="queryFlow">
        <os:retrieve key="watermark" objectStore="watermarkStore" target="lastQueryTimestamp" doc:name="Retrieve lastQueryTimestamp">
            <os:default-value ><![CDATA[#[read(p('watermark.default.expression'))]]]></os:default-value>
        </os:retrieve>
        <ee:transform doc:name="Create GetWorkers Request" doc:id="a9530b4f-58cb-4986-bea4-82e91d27f6bd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc
---
{
	ns0#Get_Workers_Request: {
		ns0#Request_Criteria: {
			ns0#Exclude_Inactive_Workers: true,
			ns0#Transaction_Log_Criteria_Data: [{
				ns0#Transaction_Date_Range_Data: {
					ns0#Updated_From: vars.lastQueryTimestamp,
					ns0#Updated_Through: now()
				},
				ns0#Transaction_Type_References: {
					ns0#Transaction_Type_Reference: [ {
						ns0#ID @(ns0#"type" : "Business_Process_Type") : "Hire Employee"
					} ]
				}
			}]
		},
		ns0#Response_Group: {
			ns0#Include_Personal_Information: true
		}
	}
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <workday:human-resources operation="Get_Workers" doc:name="Get Workers from Workday Human Resource" doc:id="61d0f6af-d67c-4255-bc1b-25a252c5b447"
            config-ref="Workday_Config" target="response" targetValue="#[output application/json --- payload]" />
        <ee:transform doc:name="Workday workers to Salesforce users" doc:id="aeca4b42-f74a-4dcc-a3a2-3904171c1af8">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
if (vars.response.Get_Workers_Response.Response_Data != null) 
	(vars.response.Get_Workers_Response.Response_Data.*Worker map(worker) -> {
	FirstName: worker.Worker_Data.Personal_Data.Name_Data.Legal_Name_Data.Name_Detail_Data.First_Name,
	LastName: worker.Worker_Data.Personal_Data.Name_Data.Legal_Name_Data.Name_Detail_Data.Last_Name,
	Alias: worker.Worker_Data.Personal_Data.Name_Data.Legal_Name_Data.Name_Detail_Data.First_Name[0 to 2] ++ worker.Worker_Data.Personal_Data.Name_Data.Legal_Name_Data.Name_Detail_Data.Last_Name[0 to 2],
	Username: worker.Worker_Data.Personal_Data.Name_Data.Legal_Name_Data.Name_Detail_Data.First_Name[0 to 2] ++ worker.Worker_Data.Personal_Data.Name_Data.Legal_Name_Data.Name_Detail_Data.Last_Name[0 to 2] ++ "@sf.com",
	Email: worker.Worker_Data.Personal_Data.Contact_Data.Email_Address_Data.Email_Address,
	CommunityNickname: worker.Worker_Data.Personal_Data.Contact_Data.Email_Address_Data.Email_Address,
	LanguageLocaleKey: p('user.languageLocaleKey'),
	LocaleSidKey: p('user.localeSidKey'),
	TimeZoneSidKey: p('user.timeZoneSidKey'),
	EmailEncodingKey: p('user.emailEncodingKey'),
	ProfileID: p('sfdc.user.profile.id')
}) distinctBy $
else []]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <logger level="INFO" doc:name="Log Employees to sync" doc:id="8f86b841-94cf-48e0-93ee-5b115c0eea62" message="#['Employees to sync: ' ++ write(payload)]" />
        <os:store key="watermark" failOnNullValue="false" objectStore="watermarkStore" doc:name="Store lastQueryTimestamp">
            <os:value><![CDATA[#[vars.response.Get_Workers_Response.Request_Criteria.Transaction_Log_Criteria_Data.Transaction_Date_Range_Data.Updated_Through]]]></os:value>
        </os:store>
    </flow>
</mule>


        
